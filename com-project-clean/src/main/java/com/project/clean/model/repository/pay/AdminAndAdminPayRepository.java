package com.project.clean.model.repository.pay;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import com.project.clean.model.domain.commonEntity.Admin;
import com.project.clean.model.domain.joinEntity.AdminAndAdminPay;

public interface AdminAndAdminPayRepository extends JpaRepository<AdminAndAdminPay, Integer>{
	
	@Query(value="SELECT A.ADMIN_NO, A.ADMIN_NAME, A.ADMIN_ID, A.ADMIN_PWD, A.ADMIN_BIRTH, A.ADMIN_GENDER, A.ADMIN_PHONE, A.ADMIN_HIRE_DATE, A.ADMIN_RETIRE_DATE  , A.ADMIN_RETIRE_YN, A.ADMIN_JOB, A.ADMIN_LAST_LOGIN_DATE, A.ADMIN_SALARY, A.ADMIN_USE_ANNUAL_VACATION, A.ADMIN_EMAIL, A.ADMIN_ADDRESS, A.ADMIN_PICTURE_SAVE_NAME, A.ADMIN_PICTURE_SAVE_ROOT, A.ADMIN_PICTURE_THUMBNAIL_NAME, B.PAY_HISTORY_ADMIN_NO, B.PAY_ADMIN_NO, B.PAY_ADMIN_DATE, B.PAY_ADMIN_FINAL_SALARY FROM TBL_ADMIN A LEFT JOIN TBL_ADMIN_PAY B ON(A.ADMIN_NO = B.PAY_ADMIN_NO)WHERE B.PAY_ADMIN_DATE IS NULL AND A.ADMIN_RETIRE_YN = :yn ORDER BY A.ADMIN_NAME" ,nativeQuery=true)
	List<AdminAndAdminPay> findNullAdminNativeQuery(String yn);
	//SELECT A.ADMIN_NO, A.ADMIN_NAME, A.ADMIN_ID, A.ADMIN_PWD, A.ADMIN_BIRTH, A.ADMIN_GENDER, A.ADMIN_PHONE, A.ADMIN_HIRE_DATE, A.ADMIN_RETIRE_DATE  , A.ADMIN_RETIRE_YN, A.ADMIN_JOB, A.ADMIN_LAST_LOGIN_DATE, A.ADMIN_SALARY, A.ADMIN_USE_ANNUAL_VACATION, A.ADMIN_EMAIL, A.ADMIN_ADDRESS, A.ADMIN_PICTURE_SAVE_NAME, A.ADMIN_PICTURE_SAVE_ROOT, A.ADMIN_PICTURE_THUMBNAIL_NAME, B.PAY_HISTORY_ADMIN_NO, B.PAY_ADMIN_NO, B.PAY_ADMIN_DATE FROM TBL_ADMIN A LEFT JOIN TBL_ADMIN_PAY B ON(A.ADMIN_NO = B.PAY_ADMIN_NO)WHERE B.PAY_ADMIN_DATE IS NULL ORDER BY A.ADMIN_NAME
	
	
	@Query(value="SELECT A.ADMIN_NO, A.ADMIN_NAME, A.ADMIN_ID, A.ADMIN_PWD, A.ADMIN_BIRTH, A.ADMIN_GENDER, A.ADMIN_PHONE, A.ADMIN_HIRE_DATE, A.ADMIN_RETIRE_DATE  , A.ADMIN_RETIRE_YN, A.ADMIN_JOB, A.ADMIN_LAST_LOGIN_DATE, A.ADMIN_SALARY, A.ADMIN_USE_ANNUAL_VACATION, A.ADMIN_EMAIL, A.ADMIN_ADDRESS, A.ADMIN_PICTURE_SAVE_NAME, A.ADMIN_PICTURE_SAVE_ROOT, A.ADMIN_PICTURE_THUMBNAIL_NAME, B.PAY_HISTORY_ADMIN_NO, B.PAY_ADMIN_NO, B.PAY_ADMIN_DATE, B.PAY_ADMIN_FINAL_SALARY FROM TBL_ADMIN A LEFT JOIN TBL_ADMIN_PAY B ON(A.ADMIN_NO = B.PAY_ADMIN_NO)WHERE EXTRACT(MONTH FROM B.PAY_ADMIN_DATE) = EXTRACT(MONTH FROM SYSDATE) ORDER BY A.ADMIN_NAME" ,nativeQuery=true)
	List<AdminAndAdminPay> findPaidAdminNativeQuery();
	//SELECT A.ADMIN_NO, A.ADMIN_NAME, A.ADMIN_ID, A.ADMIN_PWD, A.ADMIN_BIRTH, A.ADMIN_GENDER, A.ADMIN_PHONE, A.ADMIN_HIRE_DATE, A.ADMIN_RETIRE_DATE  , A.ADMIN_RETIRE_YN, A.ADMIN_JOB, A.ADMIN_LAST_LOGIN_DATE, A.ADMIN_SALARY, A.ADMIN_USE_ANNUAL_VACATION, A.ADMIN_EMAIL, A.ADMIN_ADDRESS, A.ADMIN_PICTURE_SAVE_NAME, A.ADMIN_PICTURE_SAVE_ROOT, A.ADMIN_PICTURE_THUMBNAIL_NAME, B.PAY_HISTORY_ADMIN_NO, B.PAY_ADMIN_NO, B.PAY_ADMIN_DATE FROM TBL_ADMIN A LEFT JOIN TBL_ADMIN_PAY B ON(A.ADMIN_NO = B.PAY_ADMIN_NO)WHERE EXTRACT(MONTH FROM B.PAY_ADMIN_DATE) = EXTRACT(MONTH FROM SYSDATE) ORDER BY A.ADMIN_NAME


	List<AdminAndAdminPay> findByadminRetireYn(String yn);


	
	
	
	
	
	
}
